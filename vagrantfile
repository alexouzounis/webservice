# -*- mode: ruby -*-
# vi: set ft=ruby :

# Get our current path
vagrant_root_path = File.dirname(__FILE__)

# Get our basedir folder name
vagrant_root_name = File.basename(vagrant_root_path)

#install plugins if not installed currently.
#we use the host updater to maintain a hosts entry to easily access the box
unless Vagrant.has_plugin?("vagrant-hostsupdater")
  system('vagrant plugin install vagrant-hostsupdater')
end
#we use the host shell to run a script on the host
unless Vagrant.has_plugin?("vagrant-host-shell")
  system('vagrant plugin install vagrant-host-shell')
end

Vagrant.configure("2") do |config|

  # www1
  config.vm.define :www1 do |www1|
    www1.vm.box_check_update = true
    www1.vm.box = "ubuntu/trusty64"
    www1.vm.hostname = "www1"
    www1.ssh.pty = "true"

    # --- Hardware configuration for VirtualBox ---
    www1.vm.provider "virtualbox" do |vb|
        vb.customize ["modifyvm", :id, "--memory", "512"]
    end

    # --- Internal network only ---
    # This interface will be used for connecting with others VMs via internal network
    www1.vm.network :private_network, ip: "192.168.77.30"

    # --- Update the hosts file ---
    www1.hostsupdater.aliases = ["www1.webservice.com"]
      www1.hostsupdater.remove_on_suspend = true

    # --- Provision the box with Ansible ---
    www1.vm.provision "ansible" do |ansible|
      ansible.playbook = "provision.yml"
    end

    # --- Run test both on the vm and on the host ---
    www1.vm.provision :shell, :inline => "curl -sL 'localhost' -o /dev/null && echo 'Apache is visible from vm' "
    www1.vm.provision :host_shell do |host_shell|
      host_shell.inline = "curl -sL 'www1.webservice.com' -o /dev/null && echo 'Apache is visible from host machine' "
    end

  end

end
